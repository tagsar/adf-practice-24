{
	"name": "df1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "SqlServerTable5",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "SqlServerTable4",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "sort1",
					"description": "sorting adress based on state province id"
				},
				{
					"name": "select1"
				},
				{
					"name": "aggregate1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          AddressID as integer,",
				"          AddressLine1 as string,",
				"          City as string,",
				"          StateProvinceID as integer,",
				"          PostalCode as string,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"select1 sort(asc(StateProvinceID, true)) ~> sort1",
				"source1 select(mapColumn(",
				"          AddressID,",
				"          AddressLine1,",
				"          City,",
				"          PostalCode,",
				"          StateProvinceID,",
				"          ModifiedDate",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"sort1 aggregate(groupBy(StateProvinceID),",
				"     CityCount = count(City)) ~> aggregate1",
				"aggregate1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          StateProvinceId as integer,",
				"          City as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          StateProvinceId = StateProvinceID,",
				"          City = CityCount",
				"     )) ~> sink1"
			]
		}
	}
}